<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Library Management System</title>
  <style>
    body { font-family: Arial, sans-serif; padding: 20px; }
    h1 { text-align: center; }
    .container { margin: 20px auto; max-width: 600px; }
    .results { margin-top: 20px; }
    .result-item { border-bottom: 1px solid #ddd; padding: 10px 0; }
  </style>
</head>
<body>

  <h1>Library Management System</h1> 

  <!-- Add this above the search bar -->
    <button onclick="window.location.href='students.html'">View All Students</button>


  <div class="container">
    <h2>Search Books</h2>
    <input type="text" id="bookSearchInput" placeholder="Enter book title">
    <button onclick="searchBook()">Search</button>

    <h2>Search Students</h2>
    <input type="text" id="student-name" placeholder="Enter student name">
    <button onclick="searchStudent()">Search Student</button>

    <div class="results" id="results"></div>
  </div>

  <script>
    // Function to search for a student by name
    function searchStudent() {
      const studentName = document.getElementById("student-name").value.trim();

      if (studentName === "") {
        alert("Please enter a student name.");
        return;
      }

      fetch(`http://localhost:3000/search/student?name=${encodeURIComponent(studentName)}`)
        .then(response => {
          if (!response.ok) {
            throw new Error("Student not found.");
          }
          return response.json();
        })
        .then(data => {
          if (data.message) {
            alert(data.message); // Display the message to the user
          } else {
            console.log("Student Data:", data);
            displayResults([data], 'Student');
          }
        })
        .catch(error => {
          console.error("Error:", error);
          alert("Error: " + error.message);
        });
    }

    // Function to search for a book and show students who borrowed it
    function searchBook() {
      const title = document.getElementById('bookSearchInput').value.trim();

      if (!title) {
        alert("Please enter a book title.");
        return;
      }

      fetch(`http://localhost:3000/search/book?title=${encodeURIComponent(title)}`)
        .then(response => {
          if (!response.ok) {
            throw new Error("Book not found.");
          }
          return response.json();
        })
        .then(data => {
          if (data.message) {
            alert(data.message); // Display the message to the user
          } else {
            console.log("Book Data:", data);
            displayResults([data], 'Book');
          }
        })
        .catch(error => {
          console.error("Error:", error);
          alert("Error: " + error.message);
        });
    }

    // Function to display results (students who borrowed the book)
    function displayResults(items, type) {
      const resultsDiv = document.getElementById('results');
      resultsDiv.innerHTML = ''; // Clear previous results

      items.forEach(item => {
        const div = document.createElement('div');
        div.classList.add('result-item');

        if (type === 'Student') {
          div.innerHTML = `
            <strong>Name:</strong> ${item.student_name} <br>
            <strong>Group:</strong> ${item.student_group} <br>
            <strong>Borrowed Books:</strong>
            <ul>
              ${item.Checkouts.map(checkout => {
                const bookTitle = checkout.Book ? checkout.Book.title : 'Unknown Book';
                const bookAuthor = checkout.Book ? checkout.Book.author : 'Unknown Author';
                const dueDate = checkout.return_date ? checkout.return_date : 'No due date';
                return `<li>${bookTitle} by ${bookAuthor} (Due: ${dueDate})</li>`;
              }).join('')}
            </ul>
          `;
        } else if (type === 'Book') {
          div.innerHTML = `
            <strong>Title:</strong> ${item.book_title} <br>
            <strong>Author:</strong> ${item.book_author} <br>
            <strong>Students Who Borrowed:</strong>
            <ul>
              ${item.Checkouts.map(checkout => `
                <li>${checkout.student_name} (Group: ${checkout.student_group}, Checkout Date: ${checkout.checkout_date}, Due Date: ${checkout.return_date})</li>
              `).join('')}
            </ul>
          `;
        }

        resultsDiv.appendChild(div);
      });
    }
  </script>

</body>
</html>
