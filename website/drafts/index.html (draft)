<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Library Management System</title>
  <style>
    body { font-family: Arial, sans-serif; padding: 20px; }
    h1 { text-align: center; }
    .container { margin: 20px auto; max-width: 600px; }
    .results { margin-top: 20px; }
    .result-item { border-bottom: 1px solid #ddd; padding: 10px 0; }
  </style>
</head>
<body>

  <h1>Library Management System</h1>

  <div class="container">
    <h2>Search Books</h2>
    <input type="text" id="bookSearchInput" placeholder="Enter book title">
    <button onclick="searchBook()">Search</button>

    <h2>Search Students</h2>
    <input type="text" id="student-name" placeholder="Enter student name">
    <button onclick="searchStudent()">Search Student</button>

    <div class="results" id="results"></div>
  </div>

  <script>
    // Function to search for a student by ID or name
    function searchStudent() {
      const studentName = document.getElementById("student-name").value.trim();

      if (studentName === "") {
        alert("Please enter a student name.");
        return;
      }

      fetch(`http://localhost:3000/search/student?name=${encodeURIComponent(studentName)}`)
        .then(response => {
          if (!response.ok) {
            throw new Error("Student not found.");
          }
          return response.json();
        })
        .then(data => {
          if (data.message) {
            alert(data.message); // Display the message to the user
          } else {
            console.log("Student Data:", data);
            displayResults([data], 'Student');
          }
        })
        .catch(error => {
          console.error("Error:", error);
          alert("Error: " + error.message);
        });
    }

    // Function to search for a book by title
    async function searchBook() {
      console.log('Search for book triggered');  // Debugging log
      const title = document.getElementById('bookSearchInput').value;

      if (!title) {
        console.log('No input provided');  // Debugging log
        return;
      }

      const response = await fetch(`http://localhost:3000/search/book?title=${title}`);

      if (response.status === 404) {
        document.getElementById('results').innerHTML = '<p>Book not found.</p>';
        return;
      }

      const book = await response.json();
      console.log('Book data:', book);  // Debugging log
      displayResults([book], 'Book');
    }

    // Function to display results
    // Function to display results
function displayResults(items, type) {
  const resultsDiv = document.getElementById('results');
  resultsDiv.innerHTML = ''; // Clear previous results

  items.forEach(item => {
    const div = document.createElement('div');
    div.classList.add('result-item');

    if (type === 'Student') {
      div.innerHTML = `
        <strong>Name:</strong> ${item.student_name} <br>
        <strong>Group:</strong> ${item.student_group} <br>
        <strong>Borrowed Books:</strong>
        <ul>
          ${item.Checkouts.map(checkout => {
            // Add a check for checkout.Book being undefined
            if (checkout.Book) {
              return `
                <li>${checkout.Book.title} by ${checkout.Book.author} (Due: ${checkout.return_date})</li>
              `;
            } else {
              return `<li>Unknown Book (Due: ${checkout.return_date})</li>`;
            }
          }).join('')}
        </ul>
      `;
    } else if (type === 'Book') {
      div.innerHTML = `
        <strong>Title:</strong> ${item.title} <br>
        <strong>Author:</strong> ${item.author} <br>
        <strong>Borrowers:</strong>
        <ul>
          ${item.Checkouts.map(checkout => `
            <li>${checkout.Student.student_name} (Group: ${checkout.Student.student_group})</li>
          `).join('')}
        </ul>
      `;
    }

    resultsDiv.appendChild(div);
  });
}

  </script>

</body>
</html>
