const express = require('express');
const { sequelize, Student, Checkout, Book, Sequelize} = require('./LibraryMgmtModels');  // Import Op here
const { Op } = require('sequelize');

const app = express();
const port = 3000;

app.use(express.json());
app.use(express.static('public'));  // Serve static files from the 'public' folder

// Route for testing
app.get('/search/student', async (req, res) => {
    try {
      const studentName = req.query.name.trim();
      console.log("Searching for student:", studentName);  // Debugging line
  
      const student = await Student.findOne({
        where: {
          student_name: {
            [Op.like]: `%${studentName}%`
          }
        },
        include: {
          model: Checkout,
          include: [Book]
        }
      });
  
      if (!student) {
        return res.json({ message: "Student not found." });
      }
  
      // Format the data to send back to the frontend
      const formattedStudent = {
        student_id: student.student_id,
        student_name: student.student_name,
        student_group: student.student_group,
        Checkouts: student.Checkouts.map(checkout => ({
          checkout_id: checkout.checkout_id,
          checkout_date: checkout.checkout_date,
          return_date: checkout.return_date,
          book_isbn: checkout.book_isbn,
          book_title: checkout.Book.title,
          book_author: checkout.Book.author,
          book_rating: checkout.Book.rating
        }))
      };
  
      console.log("Formatted Student Data:", formattedStudent);
      res.json(formattedStudent);
    } catch (error) {
      console.error('Error fetching student:', error);
      res.status(500).json({ message: "An error occurred. Please try again." });
    }
  });  
  

// Start the server
app.listen(port, () => {
  console.log(`Library management system is running on http://localhost:${port}`);
});
